Traceback (most recent call last):
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/ubuntu/miniconda3/envs/jupybook/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy.random as rd  # La biblioth√®que numpy.random contient les fonctions g√©n√©rant des √©chantillons al√©atoires.
import numpy as np  # La bilioth√®que numpy permettra de calculer la moyenne et l'√©cart-type d'un ensemble des valeurs.

"""On importe aussi matplotlib.pyplot pour les trac√©s"""
import matplotlib.pyplot as plt

"""
On commence par cr√©er les N √©chantillons de U et I.
"""
N = 1000000  # Nombre d'√©chantillons √† r√©aliser.
U = 4.53
uU = 0.03
I = 12.14  # On travaille en mA pour ne pas g√©rer des nombres trop petits.
uI = 0.08  # M√™me remarque

Uech = rd.normal(U, uU, N)  # Cr√©ation des √©chantillons pour U
Iech = rd.normal(I, uI, N)  # Cr√©ation des √©chantillons pour I


"""
On va cr√©er les √©chantillons de R.
Ici, l'op√©ration est une simple division et Uech et Iech sont des vecteurs numpy. On peut donc
√©crire directement Uech / Iech pour diviser les √©l√©ments termes √† termes (vectorialisation).
"""
Rech = Uech / Iech

"""
On va tracer l'histogramme des fr√©quences des valeurs de R. On pourra l'analyser par la suite.
"""
f, ax = plt.subplots()  # On cr√©e une fen√™tre graphique et des axes.
f.suptitle("Distribution des valeurs simul√©es de R")  # On titre le graphique

ax.set_xlabel("Valeurs de R")  # On l√©gende l'axe des abscisses
ax.set_ylabel("Fr√©quences")  # On l√©gende l'axe des ordonn√©es

ax.hist(Rech, bins='rice')  # On cr√©er l'histogramme des valeurs.

plt.show()  # On affiche le graphique

"""
On calcule la moyenne et l'√©cart comme valeur mesur√©e et incertitude-type"""
R = np.mean(Rech)
uR = np.std(Rech, ddof=1)  # Calcul de l'√©cart-type. L'option ddof permet de diviser par N-1 et non par N.

print("La r√©sistance vaut {:.1f} +/- {:.1f} Ohm".format(R * 1000, uR * 1000))
"""
------------------

[0;36m  File [0;32m"<ipython-input-1-4c7b80b5e1e2>"[0;36m, line [0;32m46[0m
[0;31m    """[0m
[0m       ^[0m
[0;31mSyntaxError[0m[0;31m:[0m EOF while scanning triple-quoted string literal

SyntaxError: EOF while scanning triple-quoted string literal (<ipython-input-1-4c7b80b5e1e2>, line 46)

